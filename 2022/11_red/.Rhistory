)+
labs (fill = "Status of Ratification:",
x="",
y= "")+
theme (panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
geom_polygon(data =type_blood, colour = "white", fill = NA)+
ggtitle("Blood type by Country")
geom_polygon(data =type_blood, colour = "white", fill = NA)
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oPos))
geom_polygon(data =type_blood, colour = "white", fill = NA)+
scale_color_brewer("Reds")
geom_polygon(data =type_blood, colour = "white", fill = NA)+
scale_fill_brewer("Reds")
geom_polygon(data =type_blood, colour = "white", fill = NA) +
scale_fill_brewer("Reds")
geom_polygon(data =type_blood, colour = "white", fill = NA)
geom_polygon(data =type_blood, colour = "white", fill = NA)
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oPos))
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oPos, color = "red"))
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oPos))
geom_polygon(data =type_blood, colour = "white", fill = "grey80")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oPos))+
geom_polygon(data =type_blood, colour = "white", fill = "grey80")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oPos))+
geom_polygon(data =type_blood, colour = "white", fill = "NA")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oPos))+
geom_polygon(data =type_blood, colour = "white", fill = NA)
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(color = "red",fill = oPos))+
geom_polygon(data =type_blood, colour = "white", fill = NA)
ggplot(type_blood, aes(long, lat, group = group, color = "red") +
ggplot(type_blood, aes(long, lat, group = group) +
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oPos))+
geom_polygon(data =type_blood, colour = "white", fill = NA)+
scale_fill_brewer("Reds")
ggplot(type_blood, aes(long, lat, group = group)) +
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oPos))+
geom_polygon(data =type_blood, colour = "white", fill = NA)+
scale_fill_brewer(palette = "Reds")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oPos))+
geom_polygon(data =type_blood, colour = "white", fill = NA)+
scale_colour_brewer(palette = "Reds")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oPos))+
geom_polygon(data =type_blood, colour = "white", fill = NA)+
scale_fill_brewer(palette = "Reds")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = factor(oPos)))+
geom_polygon(data =type_blood, colour = "white", fill = NA)+
scale_fill_brewer(palette = "Reds")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oNeg))+
geom_polygon(data =type_blood, colour = "white", fill = NA)+
scale_fill_manual(values = c())
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oNeg))+
geom_polygon(data =type_blood, colour = "white", fill = NA)
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oNeg))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oNeg))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_identity()
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oNeg))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_binned()
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oNeg))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_viridis_b("rocket")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oNeg))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_viridis_c("rocket")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oNeg))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_viridis_d("rocket")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oNeg))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_viridis_c("heat")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oNeg))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_viridis_c(option = "heat")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oNeg))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_viridis_b(option = "heat")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = oNeg))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_viridis_d(option = "heat")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = factor(oNeg)))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_viridis_d(option = "heat")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = factor(oNeg)))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_viridis_d(option = "rocket")
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = factor(oNeg)))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_viridis_d(option = "rocket")+
ggtitle("Blood type by Country") +
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())+
theme(plot.title = element_text(size = 12, family = "sans", face="bold", hjust=0.5))+
theme (legend.position = "bottom",
legend.title = element_text(color = "black", size=10, family = "sans"),
legend.text = element_text (color = "black", size =8, family = "sans"),
legend.key.size = unit(0.3, 'cm'),
legend.key.height = unit(0.3, 'cm'),
legend.key.width = unit(0.3, 'cm'),
)+
labs (fill = "Status of Ratification:",
x="",
y= "")+
theme (panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = factor(oNeg)))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_viridis_d(option = "rocket")+
ggtitle("Blood type by Country") +
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())+
theme(plot.title = element_text(size = 12, family = "sans", face="bold", hjust=0.5))+
theme (legend.position = "bottom",
legend.title = element_text(color = "black", size=10, family = "sans"),
legend.text = element_text (color = "black", size =8, family = "sans"),
legend.key.size = unit(0.3, 'cm'),
legend.key.height = unit(0.3, 'cm'),
legend.key.width = unit(0.3, 'cm'),
)+
labs (fill = "0 negative",
x="",
y= "")+
theme (panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggsave()
blood <- read.csv("csvData.csv")
library(countrycode)
library(tidyverse)
#add iso2 code
blood$iso2 <- countrycode(blood$country, origin= "country.name", destination = "iso2c", )
#creata world data and add iso2
world <- map_data("world")
world$iso2 <- countrycode (world$region, origin= "country.name", destination = "iso2c", )
#merge two dataset
type_blood <- blood %>%
left_join(world, by= c("iso2" = "iso2"))
#create a world map
library(ggplot2)
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group))+
coord_fixed(1.3)
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = factor(oNeg)))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_viridis_d(option = "rocket")+
ggtitle("Blood type by Country") +
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())+
theme(plot.title = element_text(size = 12, family = "sans", face="bold", hjust=0.5))+
theme (legend.position = "bottom",
legend.title = element_text(color = "black", size=10, family = "sans"),
legend.text = element_text (color = "black", size =8, family = "sans"),
legend.key.size = unit(0.3, 'cm'),
legend.key.height = unit(0.3, 'cm'),
legend.key.width = unit(0.3, 'cm'),
)+
labs (fill = "0 negative",
x="",
y= "")+
theme (panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
map_world <- map_data("world")
library(ggplot2)
world <- map_data("world")
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group))+
coord_fixed(1.3)
ggplot(type_blood, aes(long, lat, group = group)) +
coord_fixed(1.3)+
geom_polygon(aes(fill = factor(oNeg)))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
scale_fill_viridis_d(option = "rocket")+
ggtitle("Blood type by Country") +
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())+
theme(plot.title = element_text(size = 12, family = "sans", face="bold", hjust=0.5))+
theme (legend.position = "bottom",
legend.title = element_text(color = "black", size=10, family = "sans"),
legend.text = element_text (color = "black", size =8, family = "sans"),
legend.key.size = unit(0.3, 'cm'),
legend.key.height = unit(0.3, 'cm'),
legend.key.width = unit(0.3, 'cm'),
)+
labs (fill = "0 negative",
x="",
y= "")+
theme (panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group))+
coord_fixed(1.3)+
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group))+
coord_fixed(1.3)+
geom_polygon(aes(fill = factor(oNeg)))+
geom_polygon(data =type_blood, colour = "gray", fill = NA)+
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group))+
coord_fixed(1.3)+
geom_polygon(colour = "gray", fill = NA)+
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group))+
coord_fixed(1.3)+
geom_polygon(colour = "gray", fill = "brown")+
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group),
color = "grey")+
coord_fixed(1.3)+
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group),
color = "grey80")+
coord_fixed(1.3)+
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())
force(austres)
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group),
color = "grey80", fill = "#E69F00")+
coord_fixed(1.3)+
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())
force(attenu)
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group),
color = "grey80", fill = "#E69F00")+
coord_fixed(1.3)+
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())+
theme (panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group),
color = "grey80", fill = "#E69F00")+
coord_fixed(1.3)+
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())+
theme (legend.title = element_text(color = "#E69F00", size=10, family = "sans"),
legend.title = element_text("5 minute map"))+
theme (panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group),
color = "grey80", fill = "#E69F00")+
coord_fixed(1.3)+
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())+
theme (legend.title = element_text("5 minute map", color = "#E69F00", size=10, family = "sans"))+
theme (panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group),
color = "grey80", fill = "#E69F00")+
coord_fixed(1.3)+
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())+
ggtitle("5 minute map") +
theme (legend.title = element_text(color = "#E69F00", size=10, family = "sans"))+
theme (panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot()+
geom_polygon(data=world, aes(x=long, y=lat, group = group),
color = "grey80", fill = "#E69F00")+
coord_fixed(1.3)+
theme_minimal ()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())+
ggtitle("5 minute map") +
theme (legend.title = element_text(size=10, family = "sans"))+
theme (panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
install.packages("gganatogram")
remotes::install_github("jespermaag/gganatogram")
library(gganatogram)
gganatogram(data = hgMale_key,
organism = "human", sex = "male",
fill = "colour", fillOutline = "#a6bddb") +
theme_void() +
coord_fixed()
organPlot %>%
dplyr::filter(type %in% c('circulation', 'nervous system')) %>%
gganatogram(fillOutline='#a6bddb', organism='human', sex='male', fill="colour") +
theme_void()
gganatogram(data = hgFemale_key,
organism = "human", sex = "female",
fill = "colour", fillOutline = "#a6bddb",
hgFemale_key$organ) +
theme_void() +
coord_fixed()
gganatogram(data = organPlot,
organism = "human", sex = "female",
fill = "colour", fillOutline = "#a6bddb",
hgFemale_key$organ) +
theme_void() +
coord_fixed()
gganatogram(data = organPlot,
organism = "human", sex = "female",
fill = "colour", fillOutline = "#a6bddb") +
theme_void() +
coord_fixed()
library(gganatogram)
gganatogram(data=hgFemale_key, fillOutline='grey80',
organism='human', sex='female', fill="value")
gganatogram(data=hgFemale_key, fillOutline='grey80',
organism='human', sex='female', fill="value") +
theme_void()
library(gridExtra)
gganatogram(data = organPlot,
organism = "human", sex = "female",
fill = "colour", fillOutline = "#a6bddb") +
theme_void() +
coord_fixed()
organPlot %>%
dplyr::filter(type %in% c('circulation', 'nervous system')) %>%
gganatogram(outline=F, fillOutline='#a6bddb', organism='human', sex='male', fill="colour") +
theme_void()
gganatogram(data=hgFemale_key, outline = T, fillOutline='#a6bddb', organism='human', sex='female', fill="colour") +
facet_wrap(~type, ncol=4) +
theme_void()
organPlot <- data.frame(organ = c("heart", "nerve", "brain"),
type = c("circulation",
"nervous system", "nervous system"),
colour = c("red", "blue", "blue"),
value = c(10, 5, 1),
stringsAsFactors=FALSE)
gganatogram(data = organPlot,
organism = "human", sex = "female",
fill = "colour", fillOutline = "#a6bddb") +
theme_void() +
coord_fixed()
organPlot <- data.frame(organ = c("heart", "nerve", "brain"),
type = c("circulation", "circulation"
"nervous system", "nervous system"),
organPlot <- data.frame(organ = c("heart", "nerve", "brain"),
type = c("circulation", "circulation",
"nervous system", "nervous system"),
colour = c("red", "blue", "blue"),
value = c(10, 5, 1, 8),
stringsAsFactors=FALSE)
organPlot <- data.frame(organ = c("heart", "leukocyte", "nerve", "brain"),
type = c("circulation", "circulation",
"nervous system", "nervous system"),
colour = c("red", "blue", "blue"),
value = c(10, 5, 1, 8),
stringsAsFactors=FALSE)
organPlot <- data.frame(organ = c("heart", "leukocyte", "nerve", "brain",
"liver", "stomach", "colon"),
type = c("circulation", "circulation",
"nervous system", "nervous system", "digestion", "digestion",
"digestion"),
colour = c("red", "red", "purple", "purple", "orange",
"orange", "orange"),
value = c(10, 5, 1, 8, 2, 5, 5),
stringsAsFactors=FALSE)
organPlot %>%
dplyr::filter(type %in% c('circulation', 'nervous system')) %>%
gganatogram(fillOutline='#a6bddb', organism='human',
sex='female', fill="value") +
theme_void() +
scale_fill_gradient(low = "white", high = "red")
organPlot %>%
dplyr::filter(type %in% c('circulation', 'nervous system')) %>%
gganatogram(fillOutline='#a6bddb', organism='human',
sex='female', fill="colour") +
theme_void() +
scale_fill_gradient(low = "white", high = "red")
organPlot %>%
dplyr::filter(type %in% c('circulation', 'nervous system')) %>%
gganatogram(fillOutline='white', organism='human',
sex='female', fill="colour") +
theme_void() +
scale_fill_gradient(low = "white", high = "red")
organPlot %>%
dplyr::filter(type %in% c('circulation', 'nervous system')) %>%
gganatogram(fillOutline='white', organism='human',
sex='female', fill="colour") +
theme_void() +
scale_fill_gradient(low = "white", high = "red")+
ggtitle("Circulation and Nervous System")
spotify <- read.csv("music/SpotifyTopSongsByCountry - May 2020.csv")
library(tidyverse)
library(ggplot2)
world <- map_data("world")
colnames(spotify)[1] <- "region"
df <- merge(spotify, world, by = "region")
df_1 <- df %>% filter(Rank == 1)
ggplot()+
geom_map(data = world, map = world,
aes(long, lat, map_id = region),
color = "black", fill = "lightgray", size = .2)+
geom_map(data = df_1, map = world,
aes(fill = Rank, map_id = region))+
scale_fill_ordinal()
spotify <- read.csv("music/SpotifyTopSongsByCountry - May 2020.csv")
spotify <- read.csv("SpotifyTopSongsByCountry - May 2020.csv")
